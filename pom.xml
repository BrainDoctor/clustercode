<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>net.chrigel</groupId>
    <artifactId>clustercode</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <project.deployDir>${project.basedir}/release</project.deployDir>
        <project.deploy.dockerLinuxDir>${project.deployDir}/docker-linux</project.deploy.dockerLinuxDir>
        <project.deploy.windowsDir>${project.deployDir}/windows</project.deploy.windowsDir>
        <project.assemblyDirectory>${project.basedir}/src/assembly</project.assemblyDirectory>
        <project.deploy.finalName>clustercode</project.deploy.finalName>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.squirrelframework</groupId>
            <artifactId>squirrel-foundation</artifactId>
            <version>0.3.8</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.google.guava</groupId>
                    <artifactId>guava</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jgroups</groupId>
            <artifactId>jgroups</artifactId>
            <version>3.6.12.Final</version>
        </dependency>
        <!--> =============== Compiler helpers =============================== -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.16.14</version>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        <!--> =============== DI frameworks =============================== -->
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>1</version>
        </dependency>
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <version>4.1.0</version>
        </dependency>
        <dependency>
            <groupId>com.google.inject.extensions</groupId>
            <artifactId>guice-multibindings</artifactId>
            <version>4.1.0</version>
        </dependency>
        <!--> =============== Logging frameworks =============================== -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-ext</artifactId>
            <version>1.7.22</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.7</version>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.7</version>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>2.7</version>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <!--> =============== Testing frameworks =============================== -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>2.0.2-beta</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.jimfs</groupId>
            <artifactId>jimfs</artifactId>
            <version>1.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.6.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- The Configuration of the development profile -->
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.19.1</version>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- The Configuration of the common package profile -->
        <profile>
            <id>package</id>
            <build>
                <finalName>${project.deploy.finalName}</finalName>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <descriptorRefs>
                                        <descriptorRef>jar-with-dependencies</descriptorRef>
                                    </descriptorRefs>
                                </configuration>
                            </execution>
                        </executions>
                        <configuration>
                            <archive>
                                <manifest>
                                    <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                    <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                                    <mainClass>net.chrigel.clustercode.Startup</mainClass>
                                </manifest>
                            </archive>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- The Configuration of the docker linux package profile -->
        <profile>
            <id>package-docker-linux</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.8</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <id>copy-package-docker-linux</id>
                                <configuration>
                                    <target>
                                        <!-- ========= Docker/Linux ========= -->
                                        <!-- JAR file -->
                                        <copy file="${project.build.directory}/clustercode-jar-with-dependencies.jar"
                                              tofile="${project.deploy.dockerLinuxDir}/${project.deploy.finalName}.jar"/>
                                        <!-- properties file -->
                                        <copy file="${project.assemblyDirectory}/clustercode-linux.properties"
                                              tofile="${project.deploy.dockerLinuxDir}/${project.artifactId}.properties"/>
                                        <!-- all other resources -->
                                        <copy toDir="${project.deploy.dockerLinuxDir}">
                                            <fileset dir="${project.assemblyDirectory}/resources" includes="**/*"/>
                                        </copy>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- The Configuration of the windows package profile -->
        <profile>
            <id>package-windows</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.8</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <id>copy-package-windows</id>
                                <configuration>
                                    <target>
                                        <!-- ========= Windows ========= -->
                                        <!-- JAR file -->
                                        <copy file="${project.build.directory}/clustercode-jar-with-dependencies.jar"
                                              tofile="${project.deploy.windowsDir}/${project.deploy.finalName}.jar"/>
                                        <!-- properties file -->
                                        <copy file="${project.assemblyDirectory}/clustercode-windows.properties"
                                              tofile="${project.deploy.windowsDir}/${project.artifactId}.properties"/>
                                        <!-- all other resources -->
                                        <copy toDir="${project.deploy.windowsDir}">
                                            <fileset dir="${project.assemblyDirectory}/resources" includes="**/*"/>
                                        </copy>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- The Configuration of the integration test profile -->
        <profile>
            <id>test</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>2.19.1</version>
                        <executions>
                            <execution>
                                <id>integration-test</id>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>verify</id>
                                <goals>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>